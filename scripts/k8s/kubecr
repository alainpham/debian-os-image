#!/bin/bash
# vmdl v8s
# vmcr v8s 16384 12 d12-kube 20 80G 1G debiantesting

# https://github.com/rancher/local-path-provisioner
export LOCAL_PATH_PROVISIONER_VERSION=v0.0.31

# https://github.com/kubernetes/ingress-nginx/blob/main/deploy/static/provider/baremetal/deploy.yaml
export NGINX_INGRESS_VERSION=1.12.2
export NGINX_INGRESS_KUBE_WEBHOOK_CERTGEN_VERSION=v1.5.3

# https://github.com/kubernetes-sigs/metrics-server
export METRICS_SERVER_VERSION=v0.7.2

# https://docs.tigera.io/calico/latest/getting-started/kubernetes/quickstart
export CALICO_VERSION=v3.30.0

if [ ! -f "/home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.pem" ]; then
sudo rm -rf /home/${USER}/apps/tls
mkdir -p /home/${USER}/apps/tls/cfg /home/${USER}/apps/tls/logs

docker run --rm --name certbot  -v "/home/${USER}/apps/tls/cfg:/etc/letsencrypt" -v "/home/${USER}/apps/tls/logs:/var/log/letsencrypt" infinityofspace/certbot_dns_duckdns:${CERTBOT_DUCKDNS_VERSION} \
   certonly \
     --non-interactive \
     --agree-tos \
     --email ${EMAIL} \
     --preferred-challenges dns \
     --authenticator dns-duckdns \
     --dns-duckdns-token ${DUCKDNS_TOKEN} \
     --dns-duckdns-propagation-seconds 45 \
     -d "*.${WILDCARD_DOMAIN}"
fi

sudo chown -R ${USER}:${USER} /home/${USER}/apps/tls/cfg
openssl pkcs12 -export -out /home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.p12  -in /home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/fullchain.pem -inkey  /home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.pem -passin pass:password -passout pass:password

if [ ! -f "/home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.p12" ]; then
  echo "Error: privkey.p12 does not exist. Exiting."
  exit 1
fi

sudo kubeadm init --control-plane-endpoint=${WILDCARD_DOMAIN} --pod-network-cidr=10.244.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
kubectl apply -f kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/${CALICO_VERSION}/manifests/tigera-operator.yaml
kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/${CALICO_VERSION}/manifests/custom-resources.yaml

kubectl taint node ${HOSTNAME} node-role.kubernetes.io/control-plane:NoSchedule-

wget -O /tmp/local-path-provisioner.yaml https://raw.githubusercontent.com/alainpham/debian-os-image/master/scripts/k8s/local-path-provisioner.yaml
envsubst '${LOCAL_PATH_PROVISIONER_VERSION}'  < /tmp/local-path-provisioner.yaml | kubectl apply -f -

wget -O /tmp/metrics-server.yaml https://raw.githubusercontent.com/alainpham/debian-os-image/master/scripts/k8s/metrics-server.yaml
envsubst < /tmp/metrics-server.yaml | kubectl apply -f -

kubectl create ns ingress-nginx
kubectl -n ingress-nginx create secret tls nginx-ingress-tls  --key="/home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/privkey.pem"   --cert="/home/${USER}/apps/tls/cfg/live/${WILDCARD_DOMAIN}/fullchain.pem"  --dry-run=client -o yaml | kubectl apply -f -

wget -O /tmp/ingress.yaml https://raw.githubusercontent.com/alainpham/debian-os-image/master/scripts/k8s/ingress-hostport-notoleration.yaml
envsubst < /tmp/ingress.yaml | kubectl -n ingress-nginx apply -f -
