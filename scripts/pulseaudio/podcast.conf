# cp -R /usr/share/pipewire to ~/.config/pipewire
# cp podcast.conf  ~/.config/pipewire/pipewire.conf.d/podcast.conf

context.objects = [
    { factory = adapter
        args = {
            factory.name           = api.alsa.pcm.source
            node.name              = "to-caller"
            node.description       = "to-caller"
            media.class            = "Audio/Source"
            api.alsa.path          = "hw:loop,0,7"
            audio.channels         = 2
        }
    }
    
    { factory = adapter
        args = {
            factory.name           = api.alsa.pcm.sink 
            node.name              = "to-caller-sink"
            node.description       = "to-caller-sink"
            media.class            = "Audio/Sink" 
            api.alsa.path          = "hw:loop,1,7"
            audio.format           = "S32LE"
            audio.channels         = 2
        }
    }



    # {
    #   factory = "adapter"
    #   args = {
    #     factory.name = "support.null-audio-sink"
    #     node.name = "mics-raw"
    #     node.description = "mics-raw"
    #     media.class = "Audio/Source/Virtual"
    #     audio.position = "FL,FR"
    #     object.linger    = "true"
    #   }
    # }


    {
      factory = "adapter"
      args = {
        factory.name = "support.null-audio-sink"
        node.name = "mic01-processed"
        node.description = "mic01-processed"
        media.class = "Audio/Source/Virtual"
        audio.position = "MONO"
        object.linger    = "true"

      }
    }

    {
      factory = "adapter"
      args = {
        factory.name = "support.null-audio-sink"
        node.name = "mic02-processed"
        node.description = "mic02-processed"
        media.class = "Audio/Source/Virtual"
        audio.position = "MONO"
        object.linger    = "true"
      }
    }

    {
      factory = "adapter"
      args = {
        factory.name = "support.null-audio-sink"
        node.name = "from-desktop"
        node.description = "from-desktop"
        media.class = "Audio/Sink"
        audio.position = "FL,FR"
        object.linger    = true
        monitor.channel-volumes = true
        node.param.Props = { channelVolumes = [ 1 1 ] , volume = 1}
      }
    }


    {
      factory = "adapter"
      args = {
        factory.name = "support.null-audio-sink"
        node.name = "from-caller"
        node.description = "from-caller"
        media.class = "Audio/Sink"
        audio.position = "FL,FR"
        object.linger    = true
        monitor.channel-volumes = true
        node.param.Props = { channelVolumes = [ 1 1 ], volume = 1 }
      }
    }

    {
      factory = "adapter"
      args = {
        factory.name = "support.null-audio-sink"
        node.name = "cspeakers"
        node.description = "cspeakers"
        media.class = "Audio/Sink"
        audio.position = "FL,FR"
        object.linger    = true
        monitor.channel-volumes = true
        node.param.Props = { channelVolumes = [ 1 1 ] , volume = 1}
        audio.channels         = 2
      }
    }

]



# context.modules = [{
#     name = libpipewire-module-loopback
#     args = {
#         capture.props = {
#             audio.position = [ AUX0 AUX1 AUX2 AUX4]

#             # This is the node that *captures* audio (the one with the audio input)
#             media.class = "Audio/Sink"
#             node.name = "to-caller-loopback-input"
#             node.description = "to-caller-loopback-input"
#         }
#         playback.props = {
#             # This is the node that *plays* audio (the one with the audio output)
#             audio.position = [ FR FL]
#             media.class = "Stream/Output/Audio"
#             node.name = "to-caller-loopback-output"
#             node.description = "to-caller-loopback-output"
#             node.autoconnect = false
#         }
#     }
# }]